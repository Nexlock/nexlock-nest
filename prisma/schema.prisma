// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id               String             @id @default(uuid())
  email            String?            @unique
  name             String?
  password         String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  registrationCode RegistrationCode[]
  module           Module[]
}

model RegistrationCode {
  id        String   @id @default(uuid())
  code      String
  adminId   String
  expiresAt DateTime @default(dbgenerated("now() + interval '1 day'"))
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)
}

model Module {
  id          String   @id @default(uuid())
  name        String?
  description String?
  macAddress  String   @unique
  adminId     String?
  admin       Admin?   @relation(fields: [adminId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
